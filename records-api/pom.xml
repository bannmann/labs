<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.bannmann.labs</groupId>
        <artifactId>labs</artifactId>
        <version>0.0.5</version>
    </parent>

    <artifactId>records-api</artifactId>
    <properties>
        <hsqldb.version>2.6.1</hsqldb.version>
        <jdbc.password>unittest</jdbc.password>
        <jdbc.url.db>jdbc:hsqldb:file:${test.db.directory}/db;user=${jdbc.user};password=${jdbc.password};shutdown=true</jdbc.url.db>
        <jdbc.url.server>jdbc:hsqldb:file:${test.db.directory}/db;shutdown=true</jdbc.url.server>
        <jdbc.user>UNITTEST</jdbc.user>
        <jooq-codegen-maven.directory>${project.build.directory}/generated-test-sources/jooq</jooq-codegen-maven.directory>
        <jooq.version>3.13.3</jooq.version>
        <test.db.directory>${project.build.directory}/test-db</test.db.directory>
        <test.schema.file>${project.basedir}/src/test/db/schema.sql</test.schema.file>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.21.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-parent</artifactId>
                <version>${jooq.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.github.bannmann.labs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.mizool</groupId>
            <artifactId>mizool-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.mizool.technology</groupId>
            <artifactId>technology-sql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.mizool.technology</groupId>
            <artifactId>technology-web</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>clean-test-db</id>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                            <phase>process-test-sources</phase>
                            <configuration>
                                <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                <filesets>
                                    <fileset>
                                        <directory>${test.db.directory}</directory>
                                    </fileset>
                                </filesets>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <jdbcUrl>${jdbc.url.db}</jdbcUrl>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <driver>org.hsqldb.jdbcDriver</driver>
                        <skip>${maven.test.skip}</skip>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.hsqldb</groupId>
                            <artifactId>hsqldb</artifactId>
                            <version>${hsqldb.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>create-user</id>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <phase>process-test-resources</phase>
                            <configuration>
                                <url>${jdbc.url.server}</url>
                                <sqlCommand>create user "${jdbc.user}" password '${jdbc.password}'; GRANT DBA TO ${jdbc.user};</sqlCommand>
                            </configuration>
                        </execution>
                        <!--  Create integration test data before running the tests -->
                        <execution>
                            <id>create-integration-test-data</id>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <phase>process-test-resources</phase>
                            <inherited>true</inherited>
                            <configuration>
                                <url>${jdbc.url.db}</url>
                                <autocommit>true</autocommit>
                                <srcFiles>
                                    <srcFiles>${test.schema.file}</srcFiles>
                                </srcFiles>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.jooq</groupId>
                            <artifactId>jooq-meta-extensions</artifactId>
                            <version>${jooq.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>jooq-codegen</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <phase>generate-test-sources</phase>
                            <configuration>
                                <generator>
                                    <database>
                                        <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
                                        <properties>
                                            <property>
                                                <key>scripts</key>
                                                <value>${test.schema.file}</value>
                                            </property>
                                        </properties>
                                    </database>
                                    <target>
                                        <packageName>org.example</packageName>
                                        <directory>${jooq-codegen-maven.directory}</directory>
                                    </target>
                                </generator>
                                <skip>${maven.test.skip}</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.github.bannmann.maven.silverchain</groupId>
                <artifactId>silverchain-maven-plugin</artifactId>
                <version>0.2</version>
                <configuration>
                    <inputFile>src/main/silverchain/records-api.ag</inputFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <sources>
                                <!-- jOOQ cannot add its output dir to the *test* sources, so we do that here -->
                                <source>${jooq-codegen-maven.directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release-profile</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>prepare-javadoc-silverchain</id>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <phase>prepare-package</phase>
                                    <configuration>
                                        <outputDirectory>${javadoc.sources.directory}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.build.directory}/generated-sources/silverchain</directory>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
